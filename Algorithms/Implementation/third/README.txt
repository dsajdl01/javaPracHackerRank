1) Problem Statement The Grid Search 
 
Given a 2D array of digits, try to find the location of a given  
2D pattern of digits. For example, consider the following 2D matrix: 
1234567890  
0987654321  
1111111111  
1111111111  
2222222222  
 
Assume we need to look for the following 2D pattern: 
876543  
111111  
111111 
 
If we scan through the original array, we observe that the 2D pattern 
begins at the second row and the third column of the larger grid 
(the 8 in the second row and third column of the larger grid is 
the top-left corner of the pattern we are searching for). 
 
So, a 2D pattern of P digits is said to be present in a larger grid G, 
if the latter contains a contiguous, rectangular 2D grid of digits 
matching with the pattern P, similar to the example shown above. 
 
Input Format 
The first line contains an integer, T, which is the number of test cases. 
T test cases follow, each having a structure as described below: 
The first line contains two space-separated integers, R and C, 
indicating the number of rows and columns in the grid G, respectively. 
This is followed by R lines, each with a string of C digits, which 
represent the grid G. The following line contains two tab-separated integers,  
r and c, indicating the number of rows and columns in the pattern grid P. 
 
This is followed by r lines, each with a string of c digits, 
which represent the pattern P. 
Constraints 
1≤T≤5 
1≤R,r,C,c≤1000 
1≤r≤R 
1≤c≤C 
Test Case Generation 
Each individual test case has been generated by first specifying the 
size (R and C) of the large 2D matrix, and then randomly generating the 
digits in it. A limited number of digits in the larger matrix may be changed 
by the problem setter (no more than 5% of the total number of digits in 
the marix). So the larger 2D matrix is almost-random. The pattern matrix 
has been manually-curated by the problem setter. 
 
Output Format 
Display 'YES' or 'NO', depending on whether (or not) you find that the 
larger grid G contains the rectangular pattern P. 
The evaluation will be case sensitive. 
 
Sample Input 
2 
10 10 
7283455864 
6731158619 
8988242643 
3830589324 
2229505813 
5633845374 
6473530293  
7053106601 
0834282956 
4607924137 
3 4 
9505 
3845  
3530 
15 15 
400453592126560 
114213133098692 
474386082879648 
522356951189169 
887109450487496 
252802633388782 
502771484966748 
075975207693780 
511799789562806 
404007454272504 
549043809916080 
962410809534811 
445893523733475 
768705303214174 
650629270887160 
2 2 
99 
99 

Sample Output 
YES 
NO 
 
Explanation 
The first test in the input file is:  
10 10 
7283455864 
6731158619 
8988242643 
3830589324 
2229505813 
5633845374 
6473530293 
7053106601 
0834282956 
4607924137 
3 4 
9505 
3845 
3530 
 
As one may see, the given 2D grid is indeed present in the larger grid,  
as marked in bold below. 
7283455864  
6731158619  
8988242643  
3830589324  
2229505813  
5633845374  
6473530293  
7053106601  
0834282956  
4607924137  

The second test in the input file is: 
15 15 
400453592126560 
114213133098692  
474386082879648 
522356951189169 
887109450487496 
252802633388782 
502771484966748 
075975207693780 
511799789562806 
404007454272504 
549043809916080 
962410809534811    
445893523733475 
768705303214174 
650629270887160 
2 2  
99  
99 
The search pattern is: 
99 
99 
This cannot be found in the larger grid. 
 
result is SolutionGridSearch.java file 
 
----------------------------------------------------------------------------   
  
2) Problem Statement Manasa and Stones  
  
Manasa is out on a hike with friends. She finds a trail of stones with  
numbers on them. She starts following the trail and notices that two consecutive  
stones have a difference of either a or b. Legend has it that there is a  
treasure trove at the end of the trail and if Manasa can guess the value of  
the last stone, the treasure would be hers. Given that the number on the first   
stone was 0, find all the possible values for the number on the last stone.  
  
Note: The numbers on the stones are in increasing order.  
  
Input Format  
The first line contains an integer T, i.e. the number of test cases. T test  
cases follow; each has 3 lines. The first line contains n (the number of stones).  
The second line contains a, and the third line contains b.  
  
Output Format  
Space-separated list of numbers which are the possible values of the last  
stone in increasing order.  
  
Constraints  
1≤T≤10  
1≤n,a,b≤103  
   
Sample Input   
2  
3  
1 
2 
4 
10 
100 

Sample Output 
2 3 4  
30 120 210 300 

Explanation 
All possible series for the first test case are given below: 
0,1,2 
0,1,3 
0,2,3 
0,2,4 

Hence the answer 2 3 4. 
Series with different number of final steps for second test case are the following: 
0, 10, 20, 30 
0, 10, 20, 120 
0, 10, 110, 120 
0, 10, 110, 210 
0, 100, 110, 120 
0, 100, 110, 210 
0, 100, 200, 210 
0, 100, 200, 300 

Hence the answer 30 120 210 300.  

result is SolutionManasaStones.java file 

----------------------------------------------------------------------------   
 
3) Problem Statement ACM ICPC Team 
 
You are given a list of N people who are attending ACM-ICPC World Finals. 
Each of them are either well versed in a topic or they are not.  
Find out the maximum number of topics a 2-person team can know. And also find  
out how many teams can know that maximum number of topics. 
  
Note Suppose a, b, and c are three different people, then (a,b) and (b,c) 
are counted as two different teams. 
  
Input Format 
The first line contains two integers, N and M, separated by a single space, 
where N represents the number of people, and M represents the number of topics. 
N lines follow. Each line contains a binary string of length M. If the ith 
line's jth character is 1, then the ith person knows the jth topic; otherwise, 
he doesn't know the topic. 
  
Constraints  
2≤N≤500  
1≤M≤500 
  
Output Format  
On the first line, print the maximum number of topics a 2-person team can know.   
On the second line, print the number of 2-person teams that can 
know the maximum number of topics.  
 
Sample Input 
4 5 
10101 
11100 
11010 
00101 

Sample Output  
5 
2 

Explanation 
(1, 3) and (3, 4) know all the 5 topics. So the maximal topics a 2-person 
team knows is 5, and only 2 teams can achieve this. 

result is SolutionACMICPCTeam.java file 

----------------------------------------------------------------------------   
  
4) Problem Statement Taum and B'day 
 
Taum is planning to celebrate the birthday of his friend, Diksha. There are two 
types of gifts that Diksha wants from Taum: one is black and the other is white.  
To make her happy, Taum has to buy B number of black gifts and W number of white gifts.  
  
The cost of each black gift is X units. 
The cost of every white gift is Y units. 
The cost of converting each black gift into white gift or vice versa is Z units.  
Help Taum by deducing the minimum amount he needs to spend on Diksha's gifts. 
 
Input Format 
The first line will contain an integer T which will be the number of test cases. 
There will be T pairs of lines. The first line of each test case will contain the values 
of integers B and W. Another line of each test case will contain 
the values of integers X, Y, and Z. 
 
Constraints  
1≤T≤10  
0≤X,Y,Z,B,W≤109 

Output Format 
T lines, each containing an integer: the minimum amount  
of units Taum needs to spend on gifts. 
  
Sample Input  
5  
10 10 
1 1 1 
5 9 
2 3 4 
3 6 
9 1 1 
7 7 
4 2 1 
3 3 
1 9 2 
 
Sample Output  
20 
37 
12 
35 
12  

 
Explanation 
Sample Case #01:  
There is no benefit to converting the white gifts into black or the black 
gifts into white, so Taum will have to buy each gift for 1 unit. 
So cost of buying all gifts will be: 10∗1+10∗1=20. 
  
Sample Case #02: 
Again, we can't decrease the cost of black or white gifts by converting colors.  
We will buy gifts at their original price. So cost of buying all gifts will be: 5∗2+9∗3=10+27=37. 
  
Sample Case #03: 
We will buy white gifts at their original price, 1. For black gifts, we will 
first buy white one and color them to black, so that their cost will be reduced  
to 1+1=2. So cost of buying all gifts will be: 3∗2+6∗1=12. 
  
Sample Case #04: 
Similarly, we will buy white gifts at their original price, 2. For black gifts, 
we will first buy white one and color them to black, so that their cost will  
be reduced to 2+1=3. So cost of buying all gifts will be: 7∗3+7∗2=35. 
 
Sample Case #05: We will buy black gifts at their original price, 1. For white gifts, 
we will first black gifts worth 1 unit and color them to white with another 2 units,  
so cost for white gifts is reduced to 3 units. So cost of 
buying all gifts will be: 3∗1+3∗3=3+9=12. 

result is SolutionTaumBday.java file  
